{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danny\\\\Desktop\\\\Habit-tracker-react-redux-main\\\\src\\\\pages\\\\AddHabits.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addHabit } from \"../actions/habitActions\";\nimport { NONE } from \"../constants/habitStatus\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n    width: \"600px\"\n  },\n  title: {\n    fontSize: \"2rem\"\n  },\n  container: {\n    padding: \"20px\"\n  }\n});\n\nconst AddHabits = () => {\n  _s();\n\n  const dispatch = useDispatch(); // hooks to set title and details of habit\n\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\"); // error states\n\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault(); // set error state to false of text fields\n\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n\n    if (title && details) {\n      const habit = {\n        title,\n        description: details,\n        consistency: [{\n          day: 1,\n          status: NONE\n        }, {\n          day: 2,\n          status: NONE\n        }, {\n          day: 3,\n          status: NONE\n        }, {\n          day: 4,\n          status: NONE\n        }, {\n          day: 5,\n          status: NONE\n        }, {\n          day: 6,\n          status: NONE\n        }, {\n          day: 7,\n          status: NONE\n        }]\n      };\n      dispatch(addHabit(habit));\n      navigate(\"/\");\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    size: \"sm\",\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"textPrimary\",\n      gutterBottom: true,\n      className: classes.title,\n      children: [\" \", \"Create a new Habit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      autoComplete: \"off\",\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        variant: \"outlined\",\n        label: \"Habit Title\",\n        color: \"primary\",\n        required: true,\n        error: titleError,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.field,\n        variant: \"outlined\",\n        label: \"Habit Description\",\n        color: \"primary\",\n        fullWidth: true,\n        rows: 3,\n        required: true,\n        error: detailsError,\n        onChange: event => setDetails(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 20\n        }, this),\n        children: \"Submit Habbit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddHabits, \"JKuS+gd1yRf+ma1VtS3YWHkZIqA=\", false, function () {\n  return [useDispatch, useNavigate, useStyles];\n});\n\n_c = AddHabits;\nexport default AddHabits;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddHabits\");","map":{"version":3,"sources":["C:/Users/Danny/Desktop/Habit-tracker-react-redux-main/src/pages/AddHabits.jsx"],"names":["Button","Container","makeStyles","TextField","Typography","KeyboardArrowRight","React","useState","useDispatch","addHabit","NONE","useNavigate","useStyles","field","marginTop","marginBottom","display","width","title","fontSize","container","padding","AddHabits","dispatch","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","navigate","handleSubmit","event","preventDefault","habit","description","consistency","day","status","classes","target","value"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC;AAC3BW,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,OAAO,EAAE,OAHJ;AAILC,IAAAA,KAAK,EAAE;AAJF,GADoB;AAO3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAPoB;AAU3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE;AADA;AAVgB,CAAD,CAA5B;;AAeA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B,CADsB,CAGtB;;AACA,QAAM,CAACU,KAAD,EAAQM,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC,CALsB,CAOtB;;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMwB,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,QAAMqB,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CAG9B;;AACAN,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;;AAEA,QAAIZ,KAAK,KAAK,EAAd,EAAkB;AAChBU,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACD,QAAIH,OAAO,KAAK,EAAhB,EAAoB;AAClBK,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACD,QAAIZ,KAAK,IAAIO,OAAb,EAAsB;AACpB,YAAMU,KAAK,GAAG;AACZjB,QAAAA,KADY;AAEZkB,QAAAA,WAAW,EAAEX,OAFD;AAGZY,QAAAA,WAAW,EAAE,CACX;AACEC,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SADW,EAKX;AACE4B,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SALW,EASX;AACE4B,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SATW,EAaX;AACE4B,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SAbW,EAiBX;AACE4B,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SAjBW,EAqBX;AACE4B,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SArBW,EAyBX;AACE4B,UAAAA,GAAG,EAAE,CADP;AAEEC,UAAAA,MAAM,EAAE7B;AAFV,SAzBW;AAHD,OAAd;AAkCAa,MAAAA,QAAQ,CAACd,QAAQ,CAAC0B,KAAD,CAAT,CAAR;AACAJ,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,GAnDD;;AAoDA,QAAMS,OAAO,GAAG5B,SAAS,EAAzB;AACA,sBACE,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,IAAhB;AAAqB,IAAA,SAAS,EAAE4B,OAAO,CAACpB,SAAxC;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,YAAY,MAHd;AAIE,MAAA,SAAS,EAAEoB,OAAO,CAACtB,KAJrB;AAAA,iBAMG,GANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAM,MAAA,QAAQ,EAAEc,YAAhB;AAA8B,MAAA,YAAY,EAAC,KAA3C;AAAiD,MAAA,UAAU,MAA3D;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,SAAS,EAAEQ,OAAO,CAAC3B,KADrB;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,aAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,KAAK,EAAEc,UANT;AAOE,QAAA,QAAQ,EAAGM,KAAD,IAAWT,QAAQ,CAACS,KAAK,CAACQ,MAAN,CAAaC,KAAd;AAP/B;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD;AACE,QAAA,SAAS,EAAEF,OAAO,CAAC3B,KADrB;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,mBAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,SAAS,MALX;AAME,QAAA,IAAI,EAAE,CANR;AAOE,QAAA,QAAQ,MAPV;AAQE,QAAA,KAAK,EAAEgB,YART;AASE,QAAA,QAAQ,EAAGI,KAAD,IAAWP,UAAU,CAACO,KAAK,CAACQ,MAAN,CAAaC,KAAd;AATjC;AAAA;AAAA;AAAA;AAAA,cAVF,eAqBE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,OAAO,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA7GD;;GAAMpB,S;UACad,W,EAUAG,W,EAsDDC,S;;;KAjEZU,S;AA+GN,eAAeA,SAAf","sourcesContent":["import {\n  Button,\n  Container,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addHabit } from \"../actions/habitActions\";\nimport { NONE } from \"../constants/habitStatus\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n    width: \"600px\",\n  },\n  title: {\n    fontSize: \"2rem\",\n  },\n  container: {\n    padding: \"20px\",\n  },\n});\n\nconst AddHabits = () => {\n  const dispatch = useDispatch();\n\n  // hooks to set title and details of habit\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n\n  // error states\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // set error state to false of text fields\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n    if (title && details) {\n      const habit = {\n        title,\n        description: details,\n        consistency: [\n          {\n            day: 1,\n            status: NONE,\n          },\n          {\n            day: 2,\n            status: NONE,\n          },\n          {\n            day: 3,\n            status: NONE,\n          },\n          {\n            day: 4,\n            status: NONE,\n          },\n          {\n            day: 5,\n            status: NONE,\n          },\n          {\n            day: 6,\n            status: NONE,\n          },\n          {\n            day: 7,\n            status: NONE,\n          },\n        ],\n      };\n      dispatch(addHabit(habit));\n      navigate(\"/\");\n    }\n  };\n  const classes = useStyles();\n  return (\n    <Container size=\"sm\" className={classes.container}>\n      <Typography\n        variant=\"h6\"\n        color=\"textPrimary\"\n        gutterBottom\n        className={classes.title}\n      >\n        {\" \"}\n        Create a new Habit\n      </Typography>\n      <form onSubmit={handleSubmit} autoComplete=\"off\" noValidate>\n        <TextField\n          className={classes.field}\n          variant=\"outlined\"\n          label=\"Habit Title\"\n          color=\"primary\"\n          required\n          error={titleError}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n        <TextField\n          className={classes.field}\n          variant=\"outlined\"\n          label=\"Habit Description\"\n          color=\"primary\"\n          fullWidth\n          rows={3}\n          required\n          error={detailsError}\n          onChange={(event) => setDetails(event.target.value)}\n        />\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          endIcon={<KeyboardArrowRight />}\n        >\n          Submit Habbit\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default AddHabits;\n"]},"metadata":{},"sourceType":"module"}