{"ast":null,"code":"import { ADD_HABIT, UPDATE_HABIT_STATUS } from '../constants/actionTypes';\nimport { DONE, NOT_DONE, NONE } from '../constants/habitStatus';\nconst initialState = {\n  habits: [{\n    title: 'Go to Gym',\n    description: 'Workout for atleast 30 minutes',\n    consistency: [{\n      day: 1,\n      status: DONE\n    }, {\n      day: 2,\n      status: NOT_DONE\n    }, {\n      day: 3,\n      status: NONE\n    }, {\n      day: 4,\n      status: DONE\n    }, {\n      day: 5,\n      status: NONE\n    }, {\n      day: 6,\n      status: NOT_DONE\n    }, {\n      day: 7,\n      status: NOT_DONE\n    }]\n  }, {\n    title: 'Read a book',\n    description: 'Try to finish atleast one book',\n    consistency: [{\n      day: 1,\n      status: NONE\n    }, {\n      day: 2,\n      status: NONE\n    }, {\n      day: 3,\n      status: NONE\n    }, {\n      day: 4,\n      status: DONE\n    }, {\n      day: 5,\n      status: DONE\n    }, {\n      day: 6,\n      status: NOT_DONE\n    }, {\n      day: 7,\n      status: DONE\n    }]\n  }, {\n    title: 'Cook food',\n    description: 'Learn to cook healthy meals',\n    consistency: [{\n      day: 1,\n      status: DONE\n    }, {\n      day: 2,\n      status: NOT_DONE\n    }, {\n      day: 3,\n      status: NONE\n    }, {\n      day: 4,\n      status: NONE\n    }, {\n      day: 5,\n      status: DONE\n    }, {\n      day: 6,\n      status: DONE\n    }, {\n      day: 7,\n      status: NOT_DONE\n    }]\n  }]\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_HABIT:\n      return {\n        habits: [...state.habits, action.payload]\n      };\n    // structure of habit array\n    // habits = [title, description, consistency[day, status]]\n\n    case UPDATE_HABIT_STATUS:\n      // get index of title from habits array\n      const idx = state.habits.map(e => {\n        return e.title;\n      }).indexOf(action.title); // use day - 1 as index of consistency array and change status of habit\n\n      if (action.payload === DONE) {\n        state.habits[idx].consistency[action.day - 1].status = NOT_DONE;\n      } else if (action.payload === NOT_DONE) {\n        state.habits[idx].consistency[action.day - 1].status = NONE;\n      } else if (action.payload === NONE) {\n        state.habits[idx].consistency[action.day - 1].status = DONE;\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Danny/Desktop/Habit-tracker-react-redux-main/src/reducers/habitsReducer.js"],"names":["ADD_HABIT","UPDATE_HABIT_STATUS","DONE","NOT_DONE","NONE","initialState","habits","title","description","consistency","day","status","reducer","state","action","type","payload","idx","map","e","indexOf"],"mappings":"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","sourcesContent":["import { ADD_HABIT, UPDATE_HABIT_STATUS } from '../constants/actionTypes';\nimport { DONE, NOT_DONE, NONE } from '../constants/habitStatus';\n\nconst initialState = {\n  habits: [\n    {\n      title: 'Go to Gym',\n      description: 'Workout for atleast 30 minutes',\n      consistency: [\n        {\n          day: 1,\n          status: DONE,\n        },\n        {\n          day: 2,\n          status: NOT_DONE,\n        },\n        {\n          day: 3,\n          status: NONE,\n        },\n        {\n          day: 4,\n          status: DONE,\n        },\n        {\n          day: 5,\n          status: NONE,\n        },\n        {\n          day: 6,\n          status: NOT_DONE,\n        },\n        {\n          day: 7,\n          status: NOT_DONE,\n        },\n      ],\n    },\n    {\n      title: 'Read a book',\n      description: 'Try to finish atleast one book',\n      consistency: [\n        {\n          day: 1,\n          status: NONE,\n        },\n        {\n          day: 2,\n          status: NONE,\n        },\n        {\n          day: 3,\n          status: NONE,\n        },\n        {\n          day: 4,\n          status: DONE,\n        },\n        {\n          day: 5,\n          status: DONE,\n        },\n        {\n          day: 6,\n          status: NOT_DONE,\n        },\n        {\n          day: 7,\n          status: DONE,\n        },\n      ],\n    },\n    {\n      title: 'Cook food',\n      description: 'Learn to cook healthy meals',\n      consistency: [\n        {\n          day: 1,\n          status: DONE,\n        },\n        {\n          day: 2,\n          status: NOT_DONE,\n        },\n        {\n          day: 3,\n          status: NONE,\n        },\n        {\n          day: 4,\n          status: NONE,\n        },\n        {\n          day: 5,\n          status: DONE,\n        },\n        {\n          day: 6,\n          status: DONE,\n        },\n        {\n          day: 7,\n          status: NOT_DONE,\n        },\n      ],\n    },\n  ],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_HABIT:\n      return {\n        habits: [...state.habits, action.payload],\n      };\n\n    // structure of habit array\n    // habits = [title, description, consistency[day, status]]\n\n    case UPDATE_HABIT_STATUS:\n      // get index of title from habits array\n      const idx = state.habits\n        .map((e) => {\n          return e.title;\n        })\n        .indexOf(action.title);\n\n      // use day - 1 as index of consistency array and change status of habit\n      if (action.payload === DONE) {\n        state.habits[idx].consistency[action.day - 1].status = NOT_DONE;\n      } else if (action.payload === NOT_DONE) {\n        state.habits[idx].consistency[action.day - 1].status = NONE;\n      } else if (action.payload === NONE) {\n        state.habits[idx].consistency[action.day - 1].status = DONE;\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}